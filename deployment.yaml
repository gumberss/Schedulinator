apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedulinator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: schedulinator
  template:
    metadata:
      labels:
        app: schedulinator
    spec:
      containers:
        - name: schedulinator
          image: gumberss/schedulinator:v8

          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: "postgres-service"
            - name: REDIS_HOST
              value: "redis-service"
---
apiVersion: v1
kind: Service
metadata:
  name: schedulinator-service
spec:
  selector:
    app: schedulinator
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30007
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          env:
            - name: POSTGRES_PASSWORD
              value: "pass"
            - name: POSTGRES_DB
              value: "schedules"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          command:
            ["/bin/sh", "-c", "redis-server --requirepass $REDIS_HOST_PASSWORD"]
          env:
            - name: REDIS_HOST_PASSWORD
              value: "pass"
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
